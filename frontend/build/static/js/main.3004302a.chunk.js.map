{"version":3,"sources":["iframe-api.js","App.tsx","index.tsx"],"names":["scriptUrl","window","trustedTypes","createPolicy","createScriptURL","x","e","SpotifyIframeConfig","host","loading","console","warn","a","document","createElement","type","id","src","async","c","currentScript","n","nonce","getAttribute","setAttribute","b","getElementsByTagName","parentNode","insertBefore","ready","IFrameAPI","EmbedController","result","selected","sendFocus","getElementById","focus","search","checkReady","style","display","box","lastElementChild","removeChild","temp","appendChild","boxbox","fetch","process","REACT_API_URL","URLSearchParams","title","value","toString","then","response","json","data","forEach","row","i","song","tempDiv","onclick","element","target","parseInt","loadUri","innerHTML","concat","options","width","height","uri","createController","controller","setTimeout","addEventListener","event","innerWidth","pageX","y","innerHeight","pageY","querySelector","transform","onSpotifyIframeApiReady","IFrameApi","log","rocUp","rocDown","regen","App","React","Fragment","className","color","onClick","alt","placeholder","ReactDOM","createRoot","render","StrictMode","polyfillCountryFlagEmojis"],"mappings":"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","file":"static/js/main.3004302a.chunk.js","sourcesContent":["/* eslint-disable */\n(function () {\n  var scriptUrl = 'https://open.spotifycdn.com/cdn/build/embed-iframe-api-v1.ecb19958.js';\n  var host = 'https://open.spotify.com';\n  try {\n    var ttPolicy = window.trustedTypes.createPolicy('spotify-embed-api', {\n      createScriptURL: function (x) {\n        return x;\n      },\n    });\n    scriptUrl = ttPolicy.createScriptURL(scriptUrl);\n  } catch (e) {}\n\n  if (!window.SpotifyIframeConfig) {\n    window.SpotifyIframeConfig = {};\n  }\n  SpotifyIframeConfig.host = host;\n\n  if (SpotifyIframeConfig.loading) {\n    console.warn('The Spotify Iframe API has already been initialized.');\n    return;\n  }\n  SpotifyIframeConfig.loading = 1;\n\n  var a = document.createElement('script');\n  a.type = 'text/javascript';\n  a.id = 'spotify-iframeapi-script';\n  a.src = scriptUrl;\n  a.async = true;\n  var c = document.currentScript;\n  if (c) {\n    var n = c.nonce || c.getAttribute('nonce');\n    if (n) a.setAttribute('nonce', n);\n  }\n  var b = document.getElementsByTagName('script')[0];\n  b.parentNode.insertBefore(a, b);\n})();\n","import React, { MouseEventHandler } from \"react\";\nimport \"./App.css\";\nimport \"./iframe-api\";\ndeclare global {\n  interface Window {\n    onSpotifyIframeApiReady: any;\n  }\n}\n\nlet ready: boolean = false;\n\nlet IFrameAPI: any = null;\nlet EmbedController: any = null;\n\nlet result: String[][] = [];\n\nlet selected: number = 0;\n\nfunction App() {\n  return (\n    <>\n      <div className=\"parallax-wrap\">\n        <div className=\"background-grid\"></div>\n      </div>\n      <main>\n        <div className=\"top-text\">\n          <div className=\"title\">\n            <h1>\n              <span style={{ color: \"deepskyblue\" }}>Sound</span>Scout\n            </h1>\n          </div>\n          <div className=\"input-box\" onClick={sendFocus}>\n            <img src=\"mag.png\" onClick={search} alt=\"Search\" />\n            <input placeholder=\"Search for a playlist\" id=\"filter-text-val\" />\n          </div>\n        </div>\n        <div id=\"result\">\n          <div id=\"left\" />\n          <div id=\"right\">\n            <div id=\"iframe\">\n              <div id=\"embed-iframe\" />\n            </div>\n            <div id=\"roc\">\n              <div onClick={rocUp}>üëç</div>\n              <div onClick={rocDown}>üëé</div>\n            </div>\n            <div id=\"regen\" onClick={regen}>\n              Regenerate Results\n            </div>\n          </div>\n        </div>\n      </main>\n      <footer>\n        Created by Harrison Chin, Willy Jiang, Joshua Guo, Eric Huang, Alex\n        Levinson\n      </footer>\n    </>\n  );\n}\n\nfunction songTemplate(song: string[]) {\n  return `<p>${song[0]}</p><p>${song[1]}</p>`;\n}\n\nconst sendFocus: MouseEventHandler<HTMLDivElement> = (e) => {\n  (document.getElementById(\"filter-text-val\") as HTMLInputElement).focus();\n};\n\nconst search: MouseEventHandler<HTMLImageElement> = (e) => {\n  checkReady();\n  // (document.getElementById(\"answer-box\") as HTMLDivElement).innerHTML = \"\";\n  const main: HTMLElement = document.getElementById(\"result\") as HTMLDivElement;\n  main.style.display = \"grid\";\n  const box: HTMLElement = document.getElementById(\"iframe\") as HTMLDivElement;\n  while (box.lastElementChild) {\n    box.removeChild(box.lastElementChild);\n  }\n  let temp = document.createElement(\"div\");\n  temp.id = \"embed-iframe\";\n  box.appendChild(temp);\n  const boxbox: HTMLElement = document.getElementById(\"left\") as HTMLDivElement;\n  while (boxbox.lastElementChild) {\n    boxbox.removeChild(boxbox.lastElementChild);\n  }\n  result = [];\n  EmbedController = null;\n  fetch(\n    process.env.REACT_API_URL +\n      new URLSearchParams({\n        title: (document.getElementById(\"filter-text-val\") as HTMLInputElement)\n          .value,\n      }).toString()\n  )\n    .then((response) => response.json())\n    .then((data) =>\n      data.forEach((row: string[], i: number) => {\n        // each row is [song name, song artist, song uri]\n        result[i] = row;\n        let tempDiv = document.createElement(\"div\");\n        tempDiv.setAttribute(\"data-id\", i.toString());\n        tempDiv.onclick = function(e) {\n          const element = e.target as HTMLElement;\n          const i = parseInt(element.getAttribute(\"data-id\") || \"0\");\n          selected = i;\n          EmbedController.loadUri(result[i][2]);\n        };\n        tempDiv.innerHTML = songTemplate(row);\n        const doc = document.getElementById(\"left\") as HTMLElement;\n        doc.appendChild(tempDiv);\n      })\n    )\n    .then(() => {\n      if (IFrameAPI == null) {\n        // MAKE IT WAIT\n      }\n      // console.log(result);\n      const element = document.getElementById(\"embed-iframe\");\n      const options = {\n        width: \"400\",\n        height: \"400\",\n        uri: result[0][2],\n      };\n      const callback = (controller: any) => {\n        EmbedController = controller;\n      };\n      IFrameAPI.createController(element, options, callback);\n    });\n};\n\nconst parallax = (event: MouseEvent) => {\n  const x = (window.innerWidth - event.pageX * 1) / 90;\n  const y = (window.innerHeight - event.pageY * 1) / 90;\n\n  (document.querySelector(\n    \".parallax-wrap .background-grid\"\n  ) as HTMLDivElement).style.transform = `translateX(${x}px) translateY(${y}px)`;\n};\n\ndocument.addEventListener(\"mousemove\", parallax);\n\nwindow.onSpotifyIframeApiReady = (IFrameApi: any) => {\n  IFrameAPI = IFrameApi;\n  ready = true;\n  console.log(\"ready\");\n};\n\nfunction checkReady() {\n  if (!ready) {\n    window.setTimeout(checkReady, 50);\n  }\n}\n\nconst rocUp: MouseEventHandler<HTMLDivElement> = (e) => {\n  console.log(result[selected]);\n};\n\nconst rocDown: MouseEventHandler<HTMLDivElement> = (e) => {\n  console.log(result[selected]);\n};\n\nconst regen: MouseEventHandler<HTMLDivElement> = (e) => {\n  console.log(result[selected]);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { polyfillCountryFlagEmojis } from \"country-flag-emoji-polyfill\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\npolyfillCountryFlagEmojis();\n"],"sourceRoot":""}